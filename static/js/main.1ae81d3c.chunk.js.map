{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","text","icon","onClick","deleteItem","key","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","e","this","setState","target","value","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","id","onSubmit","type","placeholder","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAiCeA,MA3Bf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACxB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BAAID,EAAKE,KACL,+BACI,cAAC,IAAD,CACID,UAAU,UACVE,KAAK,QACLC,QAAS,kBAAMR,EAAMS,WAAWL,EAAKM,cANnBN,EAAKM,QAc3C,OACI,8BACI,cAAC,IAAD,CAAUC,SAAY,IAAKC,OAAO,cAAlC,SACEX,O,aCjBdY,EAAQC,IAAIC,K,IAiFGC,E,kDA9Eb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXf,MAAO,GACPgB,YAAa,CACXZ,KAAM,GACNI,IAAK,KAIT,EAAKS,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKX,WAAa,EAAKA,WAAWW,KAAhB,gBAZD,E,+CAenB,SAAYE,GACVC,KAAKC,SAAS,CACZN,YAAY,CACVZ,KAAMgB,EAAEG,OAAOC,MACfhB,IAAIiB,KAAKC,W,qBAKf,SAAQN,GACLA,EAAEO,iBACF,IAAMC,EAAUP,KAAKN,MAAMC,YAE3B,GADAa,QAAQC,IAAIF,GACM,KAAfA,EAAQxB,KAAU,CACnB,IAAM2B,EAAQ,sBAAQV,KAAKN,MAAMf,OAAnB,CAA0B4B,IACxCP,KAAKC,SAAS,CACZtB,MAAM+B,EACNf,YAAY,CACVZ,KAAK,GACLI,IAAI,U,wBAMb,SAAWA,GACT,IAAMwB,EAAgBX,KAAKN,MAAMf,MAAMiC,QAAO,SAAA/B,GAAI,OAAIA,EAAKM,MAAMA,KACjEa,KAAKC,SAAS,CACZtB,MAAOgC,M,oBAKX,WACE,OAEE,sBAAK7B,UAAU,MAAf,UACE,kDACA,gCACE,uBAAM+B,GAAG,YAAYC,SAAYd,KAAKF,QAAtC,UACE,uBACEiB,KAAK,OACLC,YAAY,uBACZb,MAAOH,KAAKN,MAAMC,YAAYZ,KAC9BkC,SAAUjB,KAAKJ,cAEjB,4CAGF,cAAC,EAAD,CACEjB,MAAOqB,KAAKN,MAAMf,MAClBO,WAAcc,KAAKd,uB,GAnEbgC,aCCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1ae81d3c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n\r\nfunction ListItems(props) {\r\n    const items = props.items;\r\n    const listItems = items.map(item => {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>{item.text}\r\n                <span>\r\n                    <FontAwesomeIcon\r\n                        className=\"faicons\"\r\n                        icon=\"trash\"\r\n                        onClick={() => props.deleteItem(item.key)}\r\n\r\n                    />\r\n                </span>\r\n            </p>\r\n\r\n        </div>\r\n    })\r\n    return (\r\n        <div>\r\n            <FlipMove duration = {300} easing=\"ease-in-out\">\r\n             {listItems}\r\n            </FlipMove>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ListItems;\r\n","import React, { Component } from 'react';\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils';\nimport './App.css';\nimport ListItems from './ListItems';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport { faThemeisle } from '@fortawesome/free-brands-svg-icons';\n\n\nlibrary.add(faTrash);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: { \n        text: '',\n        key: '',\n      }\n   \n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key:Date.now(),\n      }\n    })\n  }\n\n  addItem(e){\n     e.preventDefault(); \n     const newItem = this.state.currentItem;\n     console.log(newItem);\n     if(newItem.text!==\"\"){\n       const newItems = [ ...this.state.items, newItem];\n       this.setState({\n         items:newItems,\n         currentItem:{\n           text:'',\n           key:' ',\n         }\n       })\n     }\n  }\n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => item.key!==key);\n    this.setState({\n      items: filteredItems,\n    })\n \n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <header>Items Lister</header>\n        <div>\n          <form id=\"ItemInput\" onSubmit ={ this.addItem}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter the items here\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput} >\n            </input>\n            <button>Add</button>\n\n          </form>\n          <ListItems \n            items={this.state.items}\n            deleteItem = {this.deleteItem}\n           \n           /> \n                     \n        </div>\n\n      </div>\n\n\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}